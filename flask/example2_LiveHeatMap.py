import cv2
import numpy as np

# Define the points in the original system
x1_orig, y1_orig = 0, 0
x2_orig, y2_orig = 1920, 1080

def addWhiteNoise(x, y, mean=10, std_dev=5):
    """Add white noise to the pixel coordinates"""
    noise_x = np.random.normal(loc=mean, scale=std_dev)
    noise_y = np.random.normal(loc=mean, scale=std_dev)
    return x+noise_x, y+noise_y

def findScaleFactor(minX, minY, maxX, maxY):
    # Compute the scale factors
    x_scale_factor = (maxX - minX) / (x2_orig - x1_orig)
    y_scale_factor = (maxY - minY) / (y2_orig - y1_orig)
    return x_scale_factor, y_scale_factor
 

def translatePoint(x, y, x_scale_factor, y_scale_factor):
    # Compute the offsets
    x_offset = abs(minX) - abs(x) / x_scale_factor
    y_offset = abs(minY) - abs(y) / y_scale_factor
    # Map the coordinates
    x_mapped = x1_orig + x_offset
    y_mapped = y1_orig + y_offset
    return x_mapped, y_mapped



"""Resize the pupil coordinates"""
movement_history = [(-6796.077179904108, 448.45313334830655), (-7283.289083267311, 348.60288859365863), (-7253.571677838143, 326.11123408366416), (-7755.544330478375, 
344.6522057879824), (-8227.599682882497, 316.7724670144896), (-8731.51754771358, 336.08870075459356), (-7283.707308304743, 219.53168715823207), (-7757.057762906457, 226.28474701108854), (-8704.627725600187, 206.93395344848346), (-7741.647192526488, -308.73157015678214), (-8207.015882508227, -295.36793936155505), (-7762.5444362812095, -303.4353248519935), (-7279.879778964108, -321.9420687398401), (-7264.048550147337, -314.91944726976254), (-7269.76696280235, -319.5443424100005), (-6791.121375313268, -841.0308242009812), (-6801.209023147756, -852.6642387761214), (-7741.214834287019, -325.70329447483573), (-7276.487883897814, -321.3947731427378), (-7773.262184880049, -294.7572227707337), (-7757.874532648875, -311.9974267833621), (-7744.591480089156, -305.18123948926575), (-6799.8065555082585, -860.1363247665427), (-7750.402492473739, -311.3014599814774), (-7763.090321740343, -332.2570351263134), (-7284.113209087994, -312.4637793311832), (-7275.9924107645, -851.2324853141176), (-7751.469419327606, -305.8981809343), (-7271.826543678225, -867.9554739509249), (-6807.790899092023, -853.7073256861653), (-7254.80640477608, -320.0177702893972), (-7277.359633774124, -849.5844184873537), (-7741.134838543071, 216.62333505068344), (-7274.421920001442, -316.059025063131), (-7275.0188448079925, -332.98305954236287), (-7282.511026130773, -311.0197667919822), (-7251.154101778489, -867.4369267614048), (-7259.806513619376, -311.12119232216696), (-7261.673046819683, -312.9571114077879), (-7271.203967320928, -311.23920367346034), (-6798.96626723521, -325.1699371916313), (-7258.393823782175, -863.1189574254988), (-7254.244990299844, -320.6291723960121), (-7744.559529850796, -866.2471887242901), (-6782.584459971586, -847.811467936775), (-7754.028882964869, -874.9011899548461), (-7750.711569100563, -838.3739469420343), (-7257.294781404137, -3014.7961715554816), (-8238.89068222365, -1941.1966364337584), (-7757.36624294211, -1408.187305671321), (-7743.61952305333, -1389.905467183413), (-7274.267687557992, -1390.2389450639585), (-7751.548691505242, -1377.912744256003), (-8224.593024295673, -1377.0329037977476), (-8220.998830982346, -856.9525785195426), (-7748.660522063531, -1941.305917045845), (-8231.503808212481, -1402.5890395681656), (-8217.106981058043, -839.550393261413), (-7746.727516245888, -1915.9004894122186), (-7756.8820923979165, -1400.7256089828488), (-7279.119804685273, -1391.2865068121869), (-7258.468807437721, -1395.7395625327204), (-7287.947905004224, -1422.5634590817065), (-7757.898713266167, -851.7208898509831), (-7284.075939739536, -1396.0025771602936), (-7280.067512906626, -1393.5994593184319), (-7748.5683940414465, -1396.005969426123), (-8227.331093895004, -1387.9018884969848), (-7745.53452741579, -1399.9838711645843), (-7262.385530534751, -1384.9558903056243), (-7741.363160651668, -1381.2877797788435), (-7747.969445764417, -1411.018633941122), (-7764.641821363715, -1393.2008870211978), (-6284.307735417525, -1401.2802991000435), (-6782.99516234172, -1400.413859748178), (-6780.583968559289, -1398.2717046607474), (-6793.911767151853, -1954.1236680261848), (-5818.108985240103, -1940.3333300696434), (-6311.4661456701, -1382.2128763683677), (-6790.020705626001, -1399.4215629193168), (-5817.622218412224, -1409.0101508156386), (-6300.946558905571, -834.4833577873418), (-6802.404486015301, -306.5240358953155), (-6786.358402844877, -853.1083240152727), (-7265.723245794564, -307.43436363160754), (-6797.078506207857, -312.2426762910456), (-7260.13024747495, -302.34789863186955), (-7275.539945465324, 208.11317926034837), (-6782.519431939781, -324.90444824637797), (-6783.560987205458, -319.90346061959957), (-5833.422606926597, -865.159763620723), (-6798.7855841481905, -293.8696925822147), (-6794.590822473922, 239.1263107210022), (-6774.522665875864, -302.7432758414344), (-6291.2898409662375, -304.34917858530974), (-6781.771084435927, -317.52186326630897), (-7267.31446213259, -319.0006530933191), (-7264.745197095772, -306.90016329688854), (-7267.364578006754, -313.46432547700095), (-7271.695649548183, -321.07644233164876), (-6317.488343630681, -327.48469999991545), (-6321.252782567779, -861.727077015619), (-6774.032193433424, -316.8606988334397), (-6787.798331700562, -846.8282961376902), (-6805.7462017225125, -1402.7375789884013), (-6308.894873576852, -1398.5219966888897), (-7264.811063912274, -1400.8317594640328), (-6785.181990235334, -1409.647953429961), (-7272.633791960216, -1402.6712586975277), (-6787.840001618756, -1394.517304660158), (-7263.868830857584, -1394.3696500829901), (-6305.725130772887, -1393.0856479963381), (-6788.10852431057, -1410.4066452179736), (-6798.31574013012, -1395.587783438315), (-5826.738447825379, -1940.9614172873316), (-6781.959475075644, -858.791173624984), (-6781.93149326084, -304.7829874721347), (-7260.933185595766, -857.5071126310277), (-6788.316077165025, -320.040531678743), (-7276.485793939126, -324.9851150725342), (-6779.073080089598, -328.0318911492019), (-6306.449541542508, -322.73417972311455), (-7274.159827480773, -322.07960898275843), (-6330.033294704163, -334.9854324241438), (-7255.794072076399, -315.49263999236587), (-6309.783691510066, -863.0097649974747), (-6782.837471434578, -322.8554029416965), (-6788.570876121985, -861.5957831121962), (-6311.991431595967, -855.4134857569406), (-6784.81294744039, -322.7510402482972), (-6781.117269992357, -332.1129495677882), (-7253.691761780876, -316.14552598858586), (-6790.404298363323, -855.79794994981), (-6306.033745855989, -1405.0672538501217), (-6304.949783356474, -1400.1659635503952), (-7290.031362824852, -1401.2144270656195), (-6791.757118481378, -1404.8210909493991), (-7255.467070971238, -1395.3375401902606), (-6786.949102991352, -1935.1577592261858), (-6808.368713099156, -847.98494223394), (-6802.163404798984, -1397.9288451717075), (-6774.49375639552, -1399.5315308386953), (-7274.748444003781, -1402.933748034176), (-5814.952746222349, -1387.7217974439443), (-6782.486431429821, -1402.045249485612), (-6768.754292218917, -1392.6759826656378), (-6779.839746639398, -1923.9537208393058), (-7265.785985275545, -2463.285847560942), (-5812.009933624318, -2459.6202139102093), (-6790.392975760126, -2486.1143308883843), (-6784.920797351218, -2485.49831311195), (-7269.46985359904, -1928.0689314402346), (-5838.7614937186945, -2464.5543055171224), (-6311.80642584561, -1936.943918687735), (-6783.663621539398, -2489.362091864584), (-6316.401971536776, -2476.5395996894686), (-6319.814023967101, -1922.6646217583273), (-6804.426823865035, -2491.032324180228), (-5824.67340268812, -1939.639844289331), (-6300.872692585667, -1925.6425258420784), (-6304.117412024779, -1385.9994172719562), (-6302.426591805678, -1399.8420896875487), (-6310.880679099089, -845.6699511902248), (-6787.739831529234, -315.61490070929256), (-7275.440614912526, -864.3127705820182), (-5825.864888918561, -1394.4243330195304), (-6787.67765212934, -862.034469302866), (-6780.854288616214, -1398.3523121091387), (-6796.903512158791, -871.9224597671983), (-6789.574702457614, -847.4866888530349), (-5829.440573052577, -863.5929243031827), (-6325.323860184795, -840.3073002969174), (-6785.790564716371, -841.9664756706005), (-6311.355161322941, -1403.963115089524), (-6303.9330727502875, -827.6104008318248), (-6294.505568857992, -865.8018355717842), (-6298.986126579003, -1388.3158587030607), (-6795.303464206886, -857.6152447142941), (-5829.641150537644, -1393.7164931336324), (-6333.269482909887, -854.1936976947663), (-5354.9884408150865, -1928.1784028364614), (-5851.280134499911, -2480.742544331651), (-6796.676444823302, -1378.1037867933803), (-6312.3311225922125, -1931.9338367322348), (-6310.370845469058, -856.2590937579613), (-6787.763295933644, -308.73498677055625), (-6310.806777307096, -855.5996437493213), (-5824.447390288998, -1395.4505638297842), (-6309.303995239966, -844.6360307443426), 
(-6303.105726525348, -844.2287822193207), (-6295.085523733621, -844.3029344597292), (-6297.93693747844, -852.8731623629234), (-6297.848993631054, -856.6285577751356), (-6310.553507803859, -849.1794116316203), (-6294.351718998453, -853.8143305758396), (-6311.259406403627, -862.3301460052552), (-5831.962952155156, -860.1404712906514), (-5811.967783971831, -845.1026643804262), (-5835.054321495405, -859.3690876405477), (-5350.029296437029, -830.3868478274987), (-6307.584567571717, -1377.8462348547168), (-5814.859631253273, -1388.0522605212755), (-5833.287662645757, -1395.8838074189891), (-5816.6911712561305, -1956.1087238880773), (-5837.365847719212, -1929.9960484775957), (-6315.23489598434, -1955.5777032679046), (-5834.842481833695, 
-1393.2960037617522), (-5834.205421649924, -1922.3297876976353), (-5836.403854381515, -1947.6707034188248), (-6311.797919768628, -1390.441753072842), (-6314.903366168194, -1392.8410499580066), (-5359.494716610193, -1940.4950730921096), (-5852.0946422229745, -1935.7160273146997), (-6311.32672008609, -1383.7730219681273), (-5839.809105794611, -844.8669107998709), (-6797.376073444006, -1381.3489130377527), (-6308.108994878855, -852.8824618940217), (-5365.716739754446, 218.53160466823815), (-6298.792689948734, -853.6246360791478), (-6313.283284837474, -852.1215081240466), (-5836.434025390738, -851.3980804802524), (-6315.007352605967, -856.3361320273334), (-5815.848177500492, -846.8502977205615), (-5836.303725557484, -862.6143295830707), (-6316.005135976702, -324.6272890558313), (-5819.057494445377, 216.40954029375797), (-5844.401969146906, 239.66735731186375), (-5819.952279000878, -292.65594162589895), (-5839.273595394423, 221.437253623488), (-5350.806165936988, 235.60489213219708), (-5828.853272354333, 335.36736123139735), 
(-5811.024603700353, 222.69784466032797), (-5353.030065341302, 228.8847790322281), (-5823.234272988426, -321.9499640909803), (-5839.555974696477, 229.9951381532095), (-5832.706598030017, -325.41380068583396), (-5842.782328897389, -867.5079874224168), (-5846.066625033025, -851.1714165084983), (-5837.83738571898, -325.79125941858456), (-5822.452106646357, -856.9046245858065), (-5350.3942011906465, -336.09945583308865), (-5829.361903017206, -863.93027805706), (-5357.207241959686, -325.16977858260015), (-5811.616906344353, -858.8409971367695), (-5825.270240074366, -304.64028227584265), (-5820.2833464962805, -318.05844470067194), (-5349.971316187814, -856.3304051861002), (-5365.770173139158, -316.90117272317224), (-5345.542686013461, -315.2535084691018), (-5358.893360348862, -1388.9480346560454), (-4895.688910534513, -852.7321632394129), (-4864.47233404867, -879.19104109174), (-4850.149591602804, -860.565732282197), (-5840.685106839764, -848.9584009779926), (-4401.293312750667, -850.3535631619881), (-4845.204916511117, -855.9852295685833), (-4870.177285165253, -853.6696839332585), (-4389.111006730018, -860.4756884025561), (-4366.695451073144, -856.5521672915091), (-4380.3847190093165, -839.5031921612017), (-5349.367171090908, -852.3244767219912), (-5817.7294627305, -1393.9198540811722), (-5356.50993669779, -1399.0258019976375), (-5839.578541446631, -308.2171669485752), (-5347.515360304908, -1412.4983917646791), (-4871.435953966137, -848.3040079735172), (-4855.522108503717, -853.0264262201508), (-5356.617418042851, -857.5539847208225), (-4878.000144003678, -1401.3215387269279), (-5357.438810204815, -868.5955901435303), (-5336.461795347716, -848.4036701870895), (-5351.347544169695, -855.9409662533271), (-5362.663345018026, -310.2285397072164), (-5328.775276065543, -869.2996501676934), (-5333.372412912044, -847.6725782791286), (-5341.315509697042, -867.5086653714561), (-4878.523091120465, -1390.1575793482511), (-5824.987469069522, -847.0205120335377), (-5818.287375164066, -855.5152244082079), (-5830.944443397402, -860.0970852540403), (-5824.873228828607, -860.5066371548925), (-5841.601932294766, -863.9746282536619), (-4868.095974560444, -858.3640402399178), (-5831.7519769130595, -1394.0998468197415), (-5356.728457059566, -872.229067056089)]

# Initial Values
minX = 1e99
minY = 1e99
maxX = -1e99
maxY = -1e99
for frame in movement_history:
    minX = min(frame[0], minX)
    minY = min(frame[1], minY)
    maxX = max(frame[0], maxX)
    maxY = max(frame[1], maxY)
print("MinMax", minX, minY, maxX, maxY)

# Calculate Scalefactors
x_scale_factor, y_scale_factor = findScaleFactor(minX, minY, maxX, maxY)
print("x and y scale factors: ", x_scale_factor, y_scale_factor)
# AddingWhiteNoise option flag
ADD_RANDOM_NOISE = False

"""Perform coordinate Adjustments according to the current resolution"""
background = cv2.imread('./sample_data/sampleBackground.jpg')
trajectory_points = []
heatmap = np.zeros_like(background[:, :, 0], np.float32)  # Use float32 for better precision

for idx, frame in enumerate(movement_history):
    x, y = translatePoint(frame[0], frame[1], x_scale_factor, y_scale_factor)
    if ADD_RANDOM_NOISE:
        x, y = addWhiteNoise(x, y)

    # # Deal with out-of-bound values
    # if x > 1920:
    #     x = 1910
    # if y > 1080:
    #     y = 1070
    # if x < 0:
    #     x = 1
    # if y < 1:
    #     y = 1
    
    
    x = int(x)
    y = int(y)

    print(x, y)
    # Update the heatmap
    # heatmap[y, x] += 1

    # Update trajectory paths
    # trajectory_points.append((x, y)) # add it to trajectory

    # """Interpolate between points"""
    # if idx > 0:
    #     prev_x, prev_y = trajectory_points[idx - 1]
    #     num_points = int(np.hypot(x - prev_x, y - prev_y)) // 4 # Number of points to interpolate based on the Euclidean distance between the points
    #     x_values = np.linspace(prev_x, x, num_points)
    #     y_values = np.linspace(prev_y, y, num_points)
    #     for px, py in zip(x_values, y_values):
    #         heatmap[int(py), int(px)] += 1

# Apply Gaussian blur to the heatmap
heatmap_blurred = cv2.GaussianBlur(heatmap, (201, 201), 0)  # Use a larger kernel size for more smoothing

# Normalize the blurred heatmap to 8-bit range
heatmap_normalized = cv2.normalize(heatmap_blurred, None, alpha=0, beta=255, norm_type=cv2.NORM_MINMAX, dtype=cv2.CV_8U)

# Apply the colormap
heatmap_img = cv2.applyColorMap(heatmap_normalized, cv2.COLORMAP_JET)

image_dir = './sample_data/trajectorytracks/'
image_urls = []
for idx, frame in enumerate(movement_history):
    if frame == (None, None):
        continue
    image = background.copy()
    print(f"processing image {idx}")
    super_imposed_img = cv2.addWeighted(heatmap_img, 0.5, image, 0.5, 0)
    # Save the image
    img_url = image_dir + f'{idx}.jpg'
    cv2.imwrite(img_url, super_imposed_img)
    image_urls.append(img_url)


"""Read and save as Video"""

# Specify the output video file name
output_video_path = './sample_data/output_video_heatmap.avi'

# # Get the first image to initialize the video writer
first_image = cv2.imread(image_urls[0])
height, width, layers = first_image.shape
fourcc = cv2.VideoWriter_fourcc(*'XVID')  # You can use other codecs like 'MJPG' or 'MP4V'
video_writer = cv2.VideoWriter(output_video_path, fourcc, 30, (width, height))

# Loop through the image files and write each frame to the video
for image_file in image_urls:
    frame = cv2.imread(image_file)
    video_writer.write(frame)

# Release the video writer
video_writer.release()

print(f"Video saved to: {output_video_path}")

