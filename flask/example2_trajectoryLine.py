import cv2
import numpy as np

def addWhiteNoise(x, y, mean=20, std_dev=10):
    """Add white noise to the pixel coordinates"""
    noise_x = np.random.normal(loc=mean, scale=std_dev)
    noise_y = np.random.normal(loc=mean, scale=std_dev)
    return x+noise_x, y+noise_y

"""Resize the pupil coordinates"""
movement_history = [(None, None), (None, None), (1601.5962144392738, 1988.833385435658), (1357.2391963444136, 2061.0571538225495), (1592.5576533153576, 1981.9162082496116), (1675.200026730266, 2045.6452635717105), (1603.9561850393402, 1979.4531018377916), (1457.2757312746082, 1977.7886298826506), (1450.305037183305, 1976.106145570319), (1448.638609391926, 1972.808413150872), (1526.8683845379235, 2136.2838226369013), (1342.3501051005824, 2287.3740727970485), (1609.3049192874655, 2058.6895766011794), (1522.2982856053727, 2190.6561527480585), (1513.7631124297898, 2047.0774558536787), (1507.5575794893432, 2064.1996211139035), (1529.4520178335495, 1979.655050929924), (1608.137169721099, 2051.7674682906054), (1599.4132179150924, 2129.421011211658), (1615.3543280831277, 2122.4763686249635), (1515.9263604470189, 2053.076767065126), (1609.086492292848, 2137.7672750613838), (1447.5927608621773, 2063.9985388768246), (1614.5009440769838, 1979.982919861198), (1613.060307462911, 2057.881746742868), (1585.7758867019993, 1976.5526846593796), (1599.1358229818186, 1991.3715615783217), (1366.895767387849, 2124.7685753025994), (1682.9242849923792, 1965.516735923782), (1527.7896520072586, 2220.6783785040852), (1045.2945721159115, 2298.408561508733), (1600.2093235996974, 2205.331583442459), (1605.3400665533647, 2227.5392248887592), (1748.2020703047572, 2056.9601767106014), (1669.7291876776235, 1912.3561091563165), (1538.376039967298, 2043.5236961051576), (1524.0059654152053, 2120.786466554276), (1522.927849733451, 2143.2489749483325), (1440.3923643325109, 2120.4807014791945), (1527.0533689955282, 2222.7478042515218), (1604.9919460656552, 2059.076979065332), (None, None), (None, None), (None, None), (None, None), (1596.4863521652128, 1974.6075187629076), (1684.7417779823004, 1984.873379388485), (None, None), (None, None), (None, None), (None, None), (1443.1423909506689, 1909.0314368770757), (1629.5293740340621, 1977.8254742487502), (1612.7327951146538, 1900.2860044723172), (1442.500399520434, 1976.8035430662567), (1443.3223870092547, 1979.962566384666), (1448.2901913490982, 1981.316815603467), (1442.8016529454662, 2052.890872265623), (1515.4238055248495, 1907.0604663576698), (1374.3562456618563, 1979.8345238296972), (1447.8377509240593, 2153.713602317269), (1452.7751095203093, 1888.0645925228246), (1431.3262755324702, 1981.5542780291967), (1370.3171550667296, 1997.1082610242363), (1357.5142655694701, 1984.532563948013), (1349.3526535202939, 1990.502502940793), (1350.990783509477, 1901.288196496722), (1588.6994624601207, 1898.1912763150856), (None, None), (None, None), (1534.0076374662528, 1818.704308868393), (1427.522602243812, 1825.6691219057843), (1264.5190420513106, 1894.6227008930823), (1300.1186495505106, 1902.253528686165), (1354.7424868064625, 1973.2954636223271), (1438.5805418738091, 1921.1408974490819), (1290.7839005800722, 1894.4600367469234), (1364.5550403261911, 1986.9576935285206), (1506.5443004606416, 1907.2607346183174), (1276.340263904707, 1968.4412124271287), (1535.8151566422152, 1832.7242291131543), (1362.3459087247136, 1979.261931688308), (1427.8211216281184, 1980.557385361679), (1277.9950792644142, 1971.9887594687125), (1438.1857364437922, 1963.994063446387), (1354.963107562639, 1902.7491256498095), (1438.914507332881, 1893.3777733872867), (1385.9669467264891, 2065.1535016770977), (1512.485017364083, 1977.8582248112768), (1467.5355706292594, 1823.2300898151473), (1366.4348591634553, 1986.9296240713952), (1366.9847107531903, 1980.3581233368066), (1359.8706176257542, 1966.8967182255133), (1438.2690181608157, 1830.1375234610225), (1444.880905183339, 1914.6512361353284), (1297.765950378921, 1909.0301375954828), (1351.2274371456492, 1888.1561051285644), (1439.1327366898956, 1825.7106819823143), (1427.0832777505561, 1815.7381662783919), (1442.1431566755516, 1754.562917726752), (1440.9197537600837, 1819.7429299869573), (1598.5589313728897, 1820.965646952737), (1528.0301519495063, 1740.7809919586607), (1438.41316679943, 1832.2459964309853), (None, None), (None, None), (None, None), (None, None), (1439.9478309384517, 1668.0273225252115), (1354.7269047836044, 1811.2255001075687), (1450.6053801851103, 1815.7905702255305), (1436.2254651183089, 1828.0773451542211), (1279.130707374654, 1817.9586022959468), (1353.233695623818, 1819.1413643294661), (1368.9155744535951, 1743.5239469385274), (1354.7879892335573, 1820.1678564913302), (1425.0744655330068, 1749.681148219053), (1445.0356966495842, 1816.9669003688055), (1367.410124901812, 1809.4669445021489), (1449.3780806894777, 1820.7115048060273), (1360.525643337637, 1744.0116794996593), (1436.7119987518934, 1834.748457198475), (1439.8449780640353, 1655.33371737353), (1440.634254368605, 1903.3911879034026), (1357.9536992914789, 1673.458761279194), (1350.8802672854931, 1670.0517450562525), (1356.4816217294606, 1743.3063730536526), (1523.3457563571371, 1746.1249354915972), (None, None), (None, None), (None, None), (None, 
None), (1359.989286261221, 1760.1345583536768), (1533.9367340213882, 1738.3210768447977), (1443.6714223114664, 1750.5536556194872), (1445.7942772142615, 1827.8739270572273), (1366.3283545657703, 1839.6044716682372), (1353.2783411205114, 1840.4690596196876), (1216.0513345782654, 1830.895388147039), (1285.378515815455, 1822.5802596620638), (1207.1999413044157, 1887.8454744355781), (1290.9090590017286, 1906.503598671819), (1366.7680119443892, 1767.9220300039322), (1367.6093317617874, 1811.6153535650838), (1436.7554779299119, 1840.0980395656702), (1369.018140423173, 1750.4351861319738), (1285.7910004422044, 1975.5752272454765), (1349.1227829657282, 1737.3358018867436), (1449.507518567485, 1761.1297972902917), (1358.4068903371142, 1831.5196190207726), (1435.2078782973238, 1752.6899467494652), (1436.7125476627177, 
1824.0743334887645), (1364.273095736989, 1738.3370267650998), (1455.550116428096, 1741.1698798113332), (1279.5275527559602, 1815.8842211959764), (1449.1613834785226, 1756.1398091923675), (1357.5537787343108, 1764.3055136633097), (1367.141498799488, 1752.0237377139238), (1441.6781630132853, 1741.1875516112004), (1449.6786509659853, 1742.8380346168424), (1447.8717653938857, 1750.7643224458434), (1367.5265510848492, 1748.1752248038988), (1451.271660691854, 1759.7033131436162), (1374.7492088523595, 1755.4584315395002), (1505.6731098266778, 1763.940689165921), (1544.4777702422907, 1738.7870010531449), (1447.83557892015, 1741.1575971427167), (1527.0555291399241, 1822.6421601886873), (1448.905986876503, 1733.6664821064671), (1352.7426813705267, 1844.3850801036644), (1511.4711380604106, 1753.5974927377945), (1538.494652940599, 1811.4762980839407), (1513.698187108244, 1740.2784083655458), (1364.3246882597275, 1758.258322976741), (1531.6803089079087, 1828.6542655012088), (1443.2276872661998, 1755.2801824542653), (1357.8868036541046, 1829.213344201393), (1355.6370878149585, 1671.5386922498271), (1380.8627243955423, 1679.3705972798564), (1455.9946173469186, 1832.4674146439581), (1511.065422669273, 1668.542150116987), (1276.0769626728822, 1822.1744874454234), (1439.0586377728716, 1768.361605221315), (1443.2627986392088, 1755.2146124445399), (1301.1409888043283, 1755.915003284786), (1376.8215053186818, 1749.2380176797737), (1423.8512090723948, 1731.9976093640526), (1518.5023806392578, 1656.840823336084), (1361.531936532257, 1759.2129382365201), (1372.849029396672, 1758.4330253570897), (1441.4937489628078, 1762.9356050626063), 
(1522.7532570652108, 1662.0368977673152), (1452.5483409526032, 1587.4173047566642), (1442.7644546295683, 1747.6194923073624), (1372.8648778619195, 1754.8388006349921), (1590.1125412856263, 1754.7776293873853), (1617.4762711388216, 1751.191349428555), (1447.466978491618, 1684.584431546029), (1521.8612982166408, 1577.836446172898), (1525.2389503684344, 1663.267852860751), (1521.675907254971, 1666.517474825273), (1538.0010734053626, 1667.917932220971), (1525.8647762475598, 1822.8009726396508), (1524.893251146275, 1669.74511609018), (1514.7849771356716, 1679.1572219882548), (1535.3071928127442, 1698.314020916), (1614.924509241925, 1673.3151603703589), 
(1462.4243160577498, 1678.4355830404768), (1509.9999123858313, 1744.9468478727333), (1532.099489481552, 1757.71520235115), (1444.7808925588397, 1742.3001480457108), (1513.5026317885379, 1739.040392573356), (1447.446083102977, 1806.934244635191), (1373.0067458439885, 1819.6816415444562), (1364.6690801980592, 1811.8962122278663), (1441.7016869427741, 1745.9222137363927), (1444.9850159806078, 1823.3476888545467), (1515.9528638873046, 1679.6013045108486), (1525.7585821370221, 1679.944407810338), (1505.477866734785, 1742.484774782321), (1622.334845245347, 1752.3000019714227), (1524.488783767556, 1729.2770379386136), (1517.8661173532748, 1756.4160527043994), (None, None), (None, None), (None, None), (1530.1319249282362, 1678.9034020673334), (1439.479679511752, 1828.3360112652817), (1444.375244012422, 1821.6683907508395), (1433.4662948332116, 1726.554026838895), (None, None), (None, None), (None, None), (None, None), (None, None), (1452.7774172485006, 1615.3760534709256), (1430.2660204528947, 1619.3908391890325), (1337.6493878686001, 1671.766036884488), (1428.8719013944842, 1673.8221090860777), (1520.6844224731979, 1739.5087467024932), (1522.951373421844, 1748.6948480206124), (1597.1826739699975, 1674.2303899626977), (1434.564279603656, 1759.9731224718141), (1522.2885323748164, 1681.3080880558632), (1447.6547246672346, 1835.8512403826376), (1362.1765174500124, 1748.974641353496), (1439.8330871552369, 1750.8867736585073), (1376.570531259916, 1656.8333437557178), (1412.2195362500415, 1669.5148205029611), (1366.0766089466501, 1660.262296226287), (1354.4282425379804, 1752.1677905530564), (1438.9186641390054, 1741.4890699843859), (1513.9316038129136, 1831.1966687920667), (1524.0590110842145, 1750.9160210127231), (1456.887931665618, 1743.7039953587346), (1460.602875982652, 1606.4627439267933), (1444.9538964848791, 1502.6717191768312), (1351.8205981582237, 1499.4942814143922), (1298.90965755142, 1595.79736948246), (1369.5955824887214, 1516.9791855840624), (1451.9912994956962, 1518.009000767893), (1444.472807990076, 1661.247225740951), (1296.5241858134661, 1658.3653562012535), (1371.2757444024473, 1588.5852712458018), (1440.849309514846, 1591.9425955667184), (1435.9440271962762, 1525.3539107980105), (1364.4430674656187, 1604.8305507986304), (1428.6450589963924, 1602.6694369707163), (1454.5748740215952, 1748.9099950638697), (1281.6381035339166, 1663.3355468631653), (1436.76735116324, 1679.5889903951252), (1530.9163252783308, 1691.8372881506236), (1441.7124350693841, 1885.3241751417465), (1361.0065613744628, 1923.6304417549466), (None, None), (1446.860559039507, 1907.8594008470734), (1452.1525032078266, 1892.5841871576067), (1517.2004522546795, 1838.377325992832), (1434.9789449138943, 2066.025847222607), (None, None), (1360.4134137454012, 1991.1071815111522), (1439.1375073405545, 1514.1645709704185), (1428.2476302968134, 1920.7857321258678), (1454.593764652033, 1904.7285112135032), (1443.2322215895588, 1749.8448628823778), (1440.3488749307742, 1828.8712817554715), (1524.3437049722472, 1748.6517107855886), (1536.5945847759517, 1824.3341412527045), (1686.737842659944, 1838.8154686439696), (None, None), (None, None), (None, None), (1695.719125773457, 1607.3868754890207), (1531.6342074457102, 1521.497639836531), (1603.2647817738493, 1532.4458404991167), (1617.7396916008736, 1589.8548003897156), (1547.2330665607321, 1596.3481529916403), (1597.372237456728, 1516.1322720931998), (1505.3798153625312, 1579.555545383193), (1519.096016982765, 1516.901445269631)]

# Initial Values
minX = 1e99
minY = 1e99
maxX = -1e99
maxY = -1e99
for frame in movement_history:
    if not frame == (None, None):
        minX = min(frame[0], minX)
        minY = min(frame[1], minY)
        maxX = max(frame[0], maxX)
        maxY = max(frame[1], maxY)
print(minX, minY, maxX, maxY)

# displacement ratio for pixel for resizing
disp_x = (maxX - minX) / 1920 
disp_y = (maxY - minY) / 1080

# AddingWhiteNoise option flag
ADD_RANDOM_NOISE = True

"""Perform coordinate Adjustments according to the current resolution"""
background = cv2.imread('./sample_data/sampleBackground.jpg')
trajectory_points = []
heatmap = np.zeros_like(background[:, :, 0], np.float32)  # Use float32 for better precision

for idx, frame in enumerate(movement_history):
    if frame == (None, None):
        continue
    x = frame[0] / disp_x
    y = frame[1] / disp_y
    if ADD_RANDOM_NOISE:
        x, y = addWhiteNoise(x, y)
    # Deal with out-of-bound values
    if x > 1920:
        x = 1910
    if y > 1080:
        y = 1060
    if x < 0:
        x = 1
    if y < 1:
        y = 1
    x = int(x)
    y = int(y)
    trajectory_points.append((x, y)) # add it to trajectory
    

    """Draw Circle"""
    image = cv2.circle(background, (int(x), int(y)), radius=5, color=(20, 255, 20), thickness=-1) 
    """Draw trajectory"""
    if len(trajectory_points) > 1:
        for j in range(1, len(trajectory_points)):
            color = max(0, 255 - j * 10)  # This will make the color fade over time
            image = cv2.line(image, trajectory_points[j - 1], trajectory_points[j], (0, 0, color), thickness=1)
    cv2.imwrite(f'./sample_data/trajectorytracks/{idx}.jpg', image)


"""Read and save as Video"""
# Path to the directory containing your image files
image_dir = './sample_data/trajectorytracks/'

# Get the list of image files in the directory
image_files = [image_dir + str(i) + '.jpg' for i in range(idx)]

# Specify the output video file name
output_video_path = './sample_data/output_video1.avi'

# # Get the first image to initialize the video writer
first_image = cv2.imread(image_files[0])
height, width, layers = first_image.shape
fourcc = cv2.VideoWriter_fourcc(*'XVID')  # You can use other codecs like 'MJPG' or 'MP4V'
video_writer = cv2.VideoWriter(output_video_path, fourcc, 30, (width, height))

# Loop through the image files and write each frame to the video
for image_file in image_files:
    frame = cv2.imread(image_file)
    video_writer.write(frame)

# Release the video writer
video_writer.release()

print(f"Video saved to: {output_video_path}")


